name: CI/CD Pipeline

on:
  push:
    branches: [main, develop, feature/*]
    tags: ["v*.*.*"]
  pull_request:
    branches: [main, develop]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      NODE_ENV: ${{ secrets.NODE_ENV }}
      PORT: ${{ secrets.PORT }}
      HOST: ${{ secrets.HOST }}
      LOG_LEVEL: ${{ secrets.LOG_LEVEL }}
      SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
      ALLOWED_ORIGINS: ${{ secrets.ALLOWED_ORIGINS }}
      AUTH0_BASE_URL: ${{ secrets.AUTH0_BASE_URL }}
      AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
      AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
      AUTH0_AUDIENCE: ${{ secrets.AUTH0_AUDIENCE }}
      AUTH0_GRANT_TYPE: ${{ secrets.AUTH0_GRANT_TYPE }}
      RATE_LIMIT_MAX: ${{ secrets.RATE_LIMIT_MAX }}
      RATE_LIMIT_TIME_WINDOW: ${{ secrets.RATE_LIMIT_TIME_WINDOW }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Build
        run: npm run build

  docker:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' || startsWith(github.ref, 'refs/tags/v')

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/tracking-api
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix=
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            NODE_ENV=${{ secrets.NODE_ENV }}
            PORT=${{ secrets.PORT }}
            HOST=${{ secrets.HOST }}
            LOG_LEVEL=${{ secrets.LOG_LEVEL }}
            SENTRY_DSN=${{ secrets.SENTRY_DSN }}
            ALLOWED_ORIGINS=${{ secrets.ALLOWED_ORIGINS }}
            AUTH0_BASE_URL=${{ secrets.AUTH0_BASE_URL }}
            AUTH0_CLIENT_ID=${{ secrets.AUTH0_CLIENT_ID }}
            AUTH0_CLIENT_SECRET=${{ secrets.AUTH0_CLIENT_SECRET }}
            AUTH0_AUDIENCE=${{ secrets.AUTH0_AUDIENCE }}
            AUTH0_GRANT_TYPE=${{ secrets.AUTH0_GRANT_TYPE }}
            RATE_LIMIT_MAX=${{ secrets.RATE_LIMIT_MAX }}
            RATE_LIMIT_TIME_WINDOW=${{ secrets.RATE_LIMIT_TIME_WINDOW }}
