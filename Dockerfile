FROM node:20-alpine as builder

WORKDIR /app

COPY package*.json ./
COPY tsconfig*.json ./

RUN npm install

COPY src/ ./src/

RUN npm run build

FROM node:20-alpine

# Argumentos de construcción
ARG NODE_ENV
ARG PORT
ARG HOST
ARG LOG_LEVEL
ARG SENTRY_DSN
ARG ALLOWED_ORIGINS
ARG AUTH0_BASE_URL
ARG AUTH0_CLIENT_ID
ARG AUTH0_CLIENT_SECRET
ARG AUTH0_AUDIENCE
ARG AUTH0_GRANT_TYPE
ARG RATE_LIMIT_MAX
ARG RATE_LIMIT_TIME_WINDOW

WORKDIR /app

COPY --from=builder /app/package*.json ./
COPY --from=builder /app/dist/ ./dist/

# Envs para la ejecución
ENV NODE_ENV=${NODE_ENV:-production}
ENV PORT=${PORT:-3000}
ENV HOST=${HOST:-0.0.0.0}
ENV LOG_LEVEL=${LOG_LEVEL:-info}
ENV SENTRY_DSN=$SENTRY_DSN
ENV ALLOWED_ORIGINS=${ALLOWED_ORIGINS:-*}
ENV AUTH0_BASE_URL=$AUTH0_BASE_URL
ENV AUTH0_CLIENT_ID=$AUTH0_CLIENT_ID
ENV AUTH0_CLIENT_SECRET=$AUTH0_CLIENT_SECRET
ENV AUTH0_AUDIENCE=$AUTH0_AUDIENCE
ENV AUTH0_GRANT_TYPE=$AUTH0_GRANT_TYPE
ENV RATE_LIMIT_MAX=${RATE_LIMIT_MAX:-100}
ENV RATE_LIMIT_TIME_WINDOW=${RATE_LIMIT_TIME_WINDOW:-60000}

RUN npm ci --only=production

EXPOSE $PORT

CMD ["npm", "start"]